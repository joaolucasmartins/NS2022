[General]
network = MuenchenNetwork
#abstract-config = true (requires omnet 6)

# TUM Client
*.client[*].numApps = 1
*.client[*].app[*].typename = "TumClientApp"
*.client[*].app[0].connectAddress = "server"
*.client[*].app[0].connectPort = 80

*.client[*].app[0].reconnectInterval = 0.1s


# TUM Server
*.server.numApps = 2
*.server.app[0].typename = "TumClientServerApp"
*.server.app[0].localPort = 80


*.server.app[1].typename = "TumTrainServerApp"
*.server.app[1].localPort = 1000

# tcp settings
**.app[*].dataTransferMode = "object"

# TUM Train 
*.train[*].numApps = 1
*.train[*].app[0].typename = "TumTrainApp"
*.train[*].app[0].destAddresses = "server"
*.train[*].app[0].destPort = 1000
*.train[*].app[0].messageLength = 120B


# router setup
**.ppg[*].queue.typename = "DropTailQueue"


######## Visualizer ########
*.visualizer.*.mobilityVisualizer.displayMobility = true # master switch
*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.displayOrientations = true
*.visualizer.*.mobilityVisualizer.displayVelocities = false
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true

**.constraintAreaMinX = 0m
**.constraintAreaMaxX = 4339m # hardcoded
**.constraintAreaMinY = 0m
**.constraintAreaMaxY = 3678m # hardcoded
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

# Train Mobility
*.train[*].mobility.typename = "BonnMotionMobility"
*.train[*].mobility.nodeId = -1



######## 5G ########
**.dynamicCellAssociation = true
**.enableHandover = true

*.gnb*.mobility.initFromDisplayString = false

# BS Positions
*.gnb1.mobility.initialX = 0m
*.gnb1.mobility.initialY = 0m
*.gnb2.mobility.initialX = 4339m
*.gnb2.mobility.initialY = 3678m

# X2 configuration
*.gnb*.numX2Apps = 1                                        # one x2App per peering node
*.gnb*.x2App[*].server.localPort = 5000 + ancestorIndex(1)  # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb1.x2App[0].client.connectAddress = "gnb2%x2ppp0" 
*.gnb2.x2App[0].client.connectAddress = "gnb1%x2ppp0" 

# UEs associates to the best BS at the beginning of the simulation
*.train[*].macCellId = 0
*.train[*].masterId = 0
*.train[*].nrMacCellId = 1
*.train[*].nrMasterId = 1

# CA configuration
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numerologyIndex = 0
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[0].numBands = 50

*.gnb*.cellularNic.numCarriers = 1
*.gnb*.cellularNic.channelModel[0].componentCarrierIndex = 0
*.train[*].cellularNic.numCarriers = 1
*.train[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0


# General PHY parameters
**.downlink_interference = true
**.uplink_interference = true
**.ueTxPower = 26
**.eNodeBTxPower = 46
**.targetBler = 0.01
**.blerShift = 5  
**.fbPeriod = 40   # reports CQI every 40ms

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")

######## Statistic Collection ########
*.server.**.txPk:vector(packetBytes).vector-recording = true
*.client[0].**.txPk:vector(packetBytes).vector-recording = true
*.client[*].**.txPk:vector(packetBytes).vector-recording = false
*.train[0].**.txPk:vector(packetBytes).vector-recording = true

*.server.**.incomingDataRate:vector.vector-recording = true
*.gnb*.pppIf.**.incomingDataRate:vector.vector-recording = true
*.client[*].**.outgoingDataRate:vector.vector-recording = true
*.train[0].**.outgoingDataRate:vector.vector-recording = true
*.gnb*.pppIf.**.outgoingDataRate:vector.vector-recording = true

*.server.app[0].serverSentTrainUpdates.vector-recording = true
*.server.app[0].serverDroppedTrainUpdates.vector-recording = true
*.server.app[1].serverReceivedTrainUpdates.vector-recording = true
*.client[*].**.timeToResponse.vector-recording = true

*.client[0].**.endToEndDelay:histogram.bin-recording = true
*.client[0].**.endToEndDelay:vector.vector-recording = true

*.train[0].**.distance:vector.vector-recording = true
*.train[0].**.harqErrorRateUl:vector.vector-recording = true
*.train[0].**.rlcDelayUl:vector.vector-recording = true
*.train[0].**.rlcPacketLossTotal:vector.vector-recording = true

#**.statistic-recording = false
**.scalar-recording = false
**.vector-recording = false
**.bin-recording = false




######## Configurations ########
[Config Default]
*.nClients = 20

*.client[*].app[0].startTime = uniform(.6s, 1.2s) 
*.client[*].app[0].numRequestsPerSession = intuniform(10, 30)
*.client[*].app[0].thinkTime = truncnormal(.25s, .1s)
*.client[*].app[0].idleInterval = truncnormal(1s, .4s)

*.client[*].app[0].tracksToRequest = "2 8"

*.server.app[0].replyDelay = 0s

*.train[*].app[0].sendInterval = truncnormal(.2s, 0.05s)
*.train[*].mobility.updateInterval = .5s

include mobility/offPeak.ini


[Config NonFrequentUpdates]
*.nClients = 20

*.client[*].app[0].startTime = uniform(.6s, 1.2s) 
*.client[*].app[0].numRequestsPerSession = intuniform(10, 30)
*.client[*].app[0].thinkTime = truncnormal(.25s, .1s)
*.client[*].app[0].idleInterval = truncnormal(1.0s, .4s)

*.client[*].app[0].tracksToRequest = "2 8"

*.server.app[0].replyDelay = 0s
*.server.app[0].trainDropTimeLimit = 1.0s

*.train[*].app[0].sendInterval = truncnormal(1.2s, .3s)
*.train[*].mobility.updateInterval = 1.2s

include mobility/weekend.ini

[Config Scalability]
*.nClients = 50

*.client[*].app[0].startTime = uniform(.6s, 1.2s) 
*.client[*].app[0].numRequestsPerSession = intuniform(10, 30)
*.client[*].app[0].thinkTime = truncnormal(.25s, .1s)
*.client[*].app[0].idleInterval = truncnormal(.2s, .1s)

*.client[*].app[0].tracksToRequest = "2 8"

*.server.app[0].replyDelay = 0s
*.server.app[0].trainDropTimeLimit = 1.0s

*.train[*].app[0].sendInterval = truncnormal(.2s, .05s)
*.train[*].mobility.updateInterval = .5s

include mobility/rushHour.ini


