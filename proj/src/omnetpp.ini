[General]
network = TumNetwork
#abstract-config = true (requires omnet 6)

*.*.numApps = 1
# number of clients
*.n = 4

# tcp apps
**.client[*].numApps = 1
**.client[*].app[*].typename = "TcpBasicClientApp"
**.client[*].app[0].localAddress = ""
**.client[*].app[0].localPort = -1
**.client[*].app[0].connectAddress = "clientServer"
**.client[*].app[0].connectPort = 80

**.client[*].app[0].startTime = exponential(5s)
**.client[*].app[0].numRequestsPerSession = 1 # TODO Customize this further
**.client[*].app[0].requestLength = intWithUnit(truncnormal(350B,20B))
**.client[*].app[0].replyLength = intWithUnit(exponential(2000B))
**.client[*].app[0].thinkTime = truncnormal(2s,3s)
**.client[*].app[0].idleInterval = truncnormal(3600s,1200s)
**.client[*].app[0].reconnectInterval = 30s

# Another choice of server app (it does the same as TcpGenericServerApp):
# **.srv.app[*].typename="TcpServerHostApp"
# **.srv.app[0].serverThreadClass="TcpGenericServerThread"
**.clientServer.numApps = 1
**.clientServer.app[*].typename = "TcpGenericServerApp"
**.clientServer.app[0].localAddress = ""
**.clientServer.app[0].localPort = 80
**.clientServer.app[0].replyDelay = 0s

# tcp settings
**.app[*].dataTransferMode = "object"

# udp apps 

**.train[*].app[0].typename = "UdpApp"
**.train[*].app[0].io.localPort = 1000
**.train[*].app[0].io.destAddress = "trainServer"
**.train[*].app[0].io.destPort = 1000
**.train[*].app[0].source.productionInterval = 10s
**.train[*].app[0].source.packetLength = intuniform(100B, 200B)
**.train[*].app[0].source.packetData = intuniform(0, 1)

# train server configuration

*.trainServer.app[0].typename = "UdpSinkApp"
*.trainServer.app[0].io.localPort = 1000
# *.trainServer.app[0].io.destAddress = "train"
*.trainServer.app[0].io.destPort = 1000
*.trainServer.app[0].source.typename = "BurstyPacketProducer"
*.trainServer.app[0].source.normalProducer.productionInterval = 1s
*.trainServer.app[0].source.normalProducer.packetLength = 100B
*.trainServer.app[0].source.burstProducer.productionInterval = 0.1s
*.trainServer.app[0].source.burstProducer.packetLength = 1000B
*.trainServer.app[0].source.scheduler.waitIntervals = "40 4"
*.trainServer.app[0].source.scheduler.transitionProbabilities = "0 1 1 0"
